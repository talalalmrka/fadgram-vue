import{d as u,r as h,c as m,b as g,e as r,w as o,a as s,o as b,f as t,g as d,t as f}from"./app-DRuLVPBO.js";const w=u({__name:"icon-picker.html",setup(k){const a=h("");return(v,e)=>{const i=s("fg-icon-picker"),l=s("Tabs");return b(),m("div",null,[e[4]||(e[4]=g(`<h1 id="icon-picker" tabindex="-1"><a class="header-anchor" href="#icon-picker"><span>Icon Picker</span></a></h1><h2 id="props" tabindex="-1"><a class="header-anchor" href="#props"><span>Props</span></a></h2><table><thead><tr><th>Prop</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td><code>id</code></td><td><code>string</code></td><td>Auto-generated</td><td>Unique ID for the input element.</td></tr><tr><td><code>name</code></td><td><code>string</code></td><td>-</td><td>Name attribute for the input.</td></tr><tr><td><code>modelValue</code></td><td><code>string | null</code></td><td><code>null</code></td><td>Currently selected icon (prefixed with <code>bi-</code>).</td></tr><tr><td><code>icon</code></td><td><code>string</code></td><td>-</td><td>Icon to display with the label.</td></tr><tr><td><code>label</code></td><td><code>string | null</code></td><td>-</td><td>Field label text.</td></tr><tr><td><code>placeholder</code></td><td><code>string</code></td><td>-</td><td>Input placeholder text.</td></tr><tr><td><code>autofocus</code></td><td><code>boolean</code></td><td><code>false</code></td><td>Whether to focus the input on mount.</td></tr><tr><td><code>autocomplete</code></td><td><code>string</code></td><td>-</td><td>Autocomplete attribute for the input.</td></tr><tr><td><code>required</code></td><td><code>boolean</code></td><td><code>false</code></td><td>Whether the input is required.</td></tr><tr><td><code>disabled</code></td><td><code>boolean</code></td><td><code>false</code></td><td>Whether the input is disabled.</td></tr><tr><td><code>inputClass</code></td><td><code>string | null</code></td><td>-</td><td>Additional CSS classes for the input.</td></tr><tr><td><code>atts</code></td><td><code>Record&lt;string, unknown&gt;</code></td><td><code>{}</code></td><td>Extra HTML attributes for the input.</td></tr><tr><td><code>info</code></td><td><code>string</code></td><td>-</td><td>Info/help text shown below the field.</td></tr><tr><td><code>containerClass</code></td><td><code>string | null</code></td><td>-</td><td>Additional classes for the dropdown container.</td></tr><tr><td><code>containerAtts</code></td><td><code>Record&lt;string, unknown&gt;</code></td><td><code>{}</code></td><td>Extra HTML attributes for the container.</td></tr><tr><td><code>groupClass</code></td><td><code>string | null</code></td><td>-</td><td>Additional classes for the input group.</td></tr><tr><td><code>groupAtts</code></td><td><code>Record&lt;string, unknown&gt;</code></td><td><code>{}</code></td><td>Extra HTML attributes for the input group.</td></tr><tr><td><code>dropdownClass</code></td><td><code>string | null</code></td><td>-</td><td>Additional classes for the dropdown.</td></tr><tr><td><code>dropdownAtts</code></td><td><code>Record&lt;string, unknown&gt;</code></td><td><code>{}</code></td><td>Extra HTML attributes for the dropdown.</td></tr><tr><td><code>size</code></td><td><code>string | null</code></td><td>-</td><td>Input size (used in styling).</td></tr><tr><td><code>icons</code></td><td><code>string[]</code></td><td>All <code>bi</code> icons</td><td>Optional icon list to filter/search from.</td></tr><tr><td><code>perPage</code></td><td><code>number</code></td><td><code>25</code></td><td>Number of icons per page.</td></tr><tr><td><code>noIconsFound</code></td><td><code>string</code></td><td><code>&#39;No icons found&#39;</code></td><td>Message to show when no icons match search.</td></tr><tr><td><code>searchPlaceholder</code></td><td><code>string</code></td><td><code>&#39;Search...&#39;</code></td><td>Placeholder text for search input.</td></tr><tr><td><code>error</code></td><td><code>string</code></td><td>-</td><td>Error message shown below the input.</td></tr></tbody></table><h2 id="emits" tabindex="-1"><a class="header-anchor" href="#emits"><span>Emits</span></a></h2><table><thead><tr><th>Event</th><th>Payload Type</th><th>Description</th></tr></thead><tbody><tr><td><code>update:modelValue</code></td><td><code>string</code></td><td>Emitted when an icon is selected or cleared.</td></tr><tr><td><code>change</code></td><td><code>string</code></td><td>Emitted immediately when <code>modelValue</code> changes.</td></tr></tbody></table><h2 id="install" tabindex="-1"><a class="header-anchor" href="#install"><span>Install</span></a></h2><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> FgIconPicker <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;fadgram-vue&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="basic-usage" tabindex="-1"><a class="header-anchor" href="#basic-usage"><span>Basic usage</span></a></h2>`,8)),r(l,{id:"426",data:[{id:"Preview"},{id:"vue"}],active:0},{title0:o(({value:n,isActive:c})=>e[1]||(e[1]=[d("Preview")])),title1:o(({value:n,isActive:c})=>e[2]||(e[2]=[d("vue")])),tab0:o(({value:n,isActive:c})=>[r(i,{modelValue:a.value,"onUpdate:modelValue":e[0]||(e[0]=p=>a.value=p),label:"Select icon"},null,8,["modelValue"]),t("p",null,"Selected icon: "+f(a.value),1)]),tab1:o(({value:n,isActive:c})=>e[3]||(e[3]=[t("div",{class:"language-vue line-numbers-mode","data-highlighter":"prismjs","data-ext":"vue"},[t("pre",null,[t("code",null,[t("span",{class:"line"},[t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),d("fg-icon-picker")]),d(),t("span",{class:"token attr-name"},"v-model"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),d("icon"),t("span",{class:"token punctuation"},'"')]),d(),t("span",{class:"token attr-name"},"label"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),d("Select icon"),t("span",{class:"token punctuation"},'"')]),d(),t("span",{class:"token punctuation"},"/>")])]),d(`
`),t("span",{class:"line"})])]),t("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[t("div",{class:"line-number"})])],-1)])),_:1})])}}}),x=JSON.parse('{"path":"/form/icon-picker.html","title":"Icon Picker","lang":"en-US","frontmatter":{"title":"Icon Picker","icon":"palette","description":"Icon Picker Props Emits Install Basic usage","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Icon Picker\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-05-03T00:18:18.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://talalalmrka.github.io/fadgram-vue/fadgram-vue/form/icon-picker.html"}],["meta",{"property":"og:site_name","content":"Fadgram Vue"}],["meta",{"property":"og:title","content":"Icon Picker"}],["meta",{"property":"og:description","content":"Icon Picker Props Emits Install Basic usage"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-05-03T00:18:18.000Z"}],["meta",{"property":"article:modified_time","content":"2025-05-03T00:18:18.000Z"}]]},"git":{"createdTime":1745964046000,"updatedTime":1746231498000,"contributors":[{"name":"talalalmrka","username":"talalalmrka","email":"talalminfo@gmail.com","commits":4,"url":"https://github.com/talalalmrka"}]},"readingTime":{"minutes":1.02,"words":307},"filePathRelative":"form/icon-picker.md","autoDesc":true}');export{w as comp,x as data};
