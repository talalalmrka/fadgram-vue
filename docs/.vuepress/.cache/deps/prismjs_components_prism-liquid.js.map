{
  "version": 3,
  "sources": ["../../../../node_modules/prismjs/components/prism-liquid.js"],
  "sourcesContent": ["Prism.languages.liquid = {\n\t'comment': {\n\t\tpattern: /(^\\{%\\s*comment\\s*%\\})[\\s\\S]+(?=\\{%\\s*endcomment\\s*%\\}$)/,\n\t\tlookbehind: true\n\t},\n\t'delimiter': {\n\t\tpattern: /^\\{(?:\\{\\{|[%\\{])-?|-?(?:\\}\\}|[%\\}])\\}$/,\n\t\talias: 'punctuation'\n\t},\n\t'string': {\n\t\tpattern: /\"[^\"]*\"|'[^']*'/,\n\t\tgreedy: true\n\t},\n\t'keyword': /\\b(?:as|assign|break|(?:end)?(?:capture|case|comment|for|form|if|paginate|raw|style|tablerow|unless)|continue|cycle|decrement|echo|else|elsif|in|include|increment|limit|liquid|offset|range|render|reversed|section|when|with)\\b/,\n\t'object': /\\b(?:address|all_country_option_tags|article|block|blog|cart|checkout|collection|color|country|country_option_tags|currency|current_page|current_tags|customer|customer_address|date|discount_allocation|discount_application|external_video|filter|filter_value|font|forloop|fulfillment|generic_file|gift_card|group|handle|image|line_item|link|linklist|localization|location|measurement|media|metafield|model|model_source|order|page|page_description|page_image|page_title|part|policy|product|product_option|recommendations|request|robots|routes|rule|script|search|selling_plan|selling_plan_allocation|selling_plan_group|shipping_method|shop|shop_locale|sitemap|store_availability|tax_line|template|theme|transaction|unit_price_measurement|user_agent|variant|video|video_source)\\b/,\n\t'function': [\n\t\t{\n\t\t\tpattern: /(\\|\\s*)\\w+/,\n\t\t\tlookbehind: true,\n\t\t\talias: 'filter'\n\t\t},\n\t\t{\n\t\t\t// array functions\n\t\t\tpattern: /(\\.\\s*)(?:first|last|size)/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'boolean': /\\b(?:false|nil|true)\\b/,\n\t'range': {\n\t\tpattern: /\\.\\./,\n\t\talias: 'operator'\n\t},\n\t// https://github.com/Shopify/liquid/blob/698f5e0d967423e013f6169d9111bd969bd78337/lib/liquid/lexer.rb#L21\n\t'number': /\\b\\d+(?:\\.\\d+)?\\b/,\n\t'operator': /[!=]=|<>|[<>]=?|[|?:=-]|\\b(?:and|contains(?=\\s)|or)\\b/,\n\t'punctuation': /[.,\\[\\]()]/,\n\t'empty': {\n\t\tpattern: /\\bempty\\b/,\n\t\talias: 'keyword'\n\t},\n};\n\nPrism.hooks.add('before-tokenize', function (env) {\n\tvar liquidPattern = /\\{%\\s*comment\\s*%\\}[\\s\\S]*?\\{%\\s*endcomment\\s*%\\}|\\{(?:%[\\s\\S]*?%|\\{\\{[\\s\\S]*?\\}\\}|\\{[\\s\\S]*?\\})\\}/g;\n\tvar insideRaw = false;\n\n\tPrism.languages['markup-templating'].buildPlaceholders(env, 'liquid', liquidPattern, function (match) {\n\t\tvar tagMatch = /^\\{%-?\\s*(\\w+)/.exec(match);\n\t\tif (tagMatch) {\n\t\t\tvar tag = tagMatch[1];\n\t\t\tif (tag === 'raw' && !insideRaw) {\n\t\t\t\tinsideRaw = true;\n\t\t\t\treturn true;\n\t\t\t} else if (tag === 'endraw') {\n\t\t\t\tinsideRaw = false;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn !insideRaw;\n\t});\n});\n\nPrism.hooks.add('after-tokenize', function (env) {\n\tPrism.languages['markup-templating'].tokenizePlaceholders(env, 'liquid');\n});\n"],
  "mappings": ";AAAA,MAAM,UAAU,SAAS;AAAA,EACxB,WAAW;AAAA,IACV,SAAS;AAAA,IACT,YAAY;AAAA,EACb;AAAA,EACA,aAAa;AAAA,IACZ,SAAS;AAAA,IACT,OAAO;AAAA,EACR;AAAA,EACA,UAAU;AAAA,IACT,SAAS;AAAA,IACT,QAAQ;AAAA,EACT;AAAA,EACA,WAAW;AAAA,EACX,UAAU;AAAA,EACV,YAAY;AAAA,IACX;AAAA,MACC,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,OAAO;AAAA,IACR;AAAA,IACA;AAAA;AAAA,MAEC,SAAS;AAAA,MACT,YAAY;AAAA,IACb;AAAA,EACD;AAAA,EACA,WAAW;AAAA,EACX,SAAS;AAAA,IACR,SAAS;AAAA,IACT,OAAO;AAAA,EACR;AAAA;AAAA,EAEA,UAAU;AAAA,EACV,YAAY;AAAA,EACZ,eAAe;AAAA,EACf,SAAS;AAAA,IACR,SAAS;AAAA,IACT,OAAO;AAAA,EACR;AACD;AAEA,MAAM,MAAM,IAAI,mBAAmB,SAAU,KAAK;AACjD,MAAI,gBAAgB;AACpB,MAAI,YAAY;AAEhB,QAAM,UAAU,mBAAmB,EAAE,kBAAkB,KAAK,UAAU,eAAe,SAAU,OAAO;AACrG,QAAI,WAAW,iBAAiB,KAAK,KAAK;AAC1C,QAAI,UAAU;AACb,UAAI,MAAM,SAAS,CAAC;AACpB,UAAI,QAAQ,SAAS,CAAC,WAAW;AAChC,oBAAY;AACZ,eAAO;AAAA,MACR,WAAW,QAAQ,UAAU;AAC5B,oBAAY;AACZ,eAAO;AAAA,MACR;AAAA,IACD;AAEA,WAAO,CAAC;AAAA,EACT,CAAC;AACF,CAAC;AAED,MAAM,MAAM,IAAI,kBAAkB,SAAU,KAAK;AAChD,QAAM,UAAU,mBAAmB,EAAE,qBAAqB,KAAK,QAAQ;AACxE,CAAC;",
  "names": []
}
